# -*- coding: utf-8 -*-
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes
from flask import Flask, jsonify
import sqlite3
import os
# ูุง ุญุงุฌุฉ ูู 'threading' ููุง ูุฃู Render ุณุชุฏูุฑ ุงูู web ู ุงูู worker ุจุดูู ูููุตู.

# *************** ูุงู ุฌุฏุงู ***************
# ุงุณุชุจุฏู YOUR_BOT_TOKEN_HERE ุจุงูุชููู ุงูุฎุงุต ุจู ุงูุฐู ุชุญุตู ุนููู ูู BotFather.
# ูู ุงูุฃูุถู ุงุณุชุฎุฏุงู ูุชุบูุฑ ุจูุฆุฉ (Environment Variable) ูุชุฎุฒูู ุงูุชููู.
# Render ุณุชุณูุญ ูู ุจุถุจุท ูุฐุง ุงููุชุบูุฑ.
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "7834007989:AAHuV-pMgYTC2fv3x56_4_UT42qVB7VLMgU") # ุงูุชููู ุงููุถููู
if TOKEN == "7834007989:AAHuV-pMgYTC2fv3x56_4_UT42qVB7VLMgU":
    logging.warning("TELEGRAM_BOT_TOKEN ูู ูุชู ุถุจุทู ููุชุบูุฑ ุจูุฆุฉ ูู Render. ููุตู ุจุถุจุทู ููุงู.")
# ***************************************

# *************** ูุงู ุฌุฏุงู ***************
# ุงุณุชุจุฏู ูุฐุง ุงูุฑุงุจุท ุจุฑุงุจุท GitHub Pages ุงูุญูููู ุงูุฎุงุต ุจุชุทุจูู ุงูููุจ ุงูุฎุงุต ุจู.
# ุงูุฐู ููุช ุจูุดุฑู ูุณุจููุง.
WEB_APP_URL = "https://leader4syria.github.io/testbotweb/" # ูุฐุง ูู ุงูุฑุงุจุท ุงูุฐู ุฃุฑุณูุชู ูู!
# ***************************************

# ุฅุนุฏุงุฏุงุช ุชุณุฌูู ุงูุฏุฎูู (Logging) ูุชุชุจุน ูุง ูุญุฏุซ ูู ุงูุจูุช
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

# --- ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช SQLite ---
DATABASE_NAME = 'services.db'

def init_db():
    """ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุฅูุดุงุก ุฌุฏูู ุงูุฎุฏูุงุช ุฅุฐุง ูู ููู ููุฌูุฏูุง."""
    conn = sqlite3.connect(DATABASE_NAME)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS services (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            description TEXT,
            price TEXT
        )
    ''')
    # ุฅุถุงูุฉ ุจุนุถ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ ุฅุฐุง ูุงูุช ุงููุงุนุฏุฉ ูุงุฑุบุฉ
    cursor.execute('SELECT COUNT(*) FROM services')
    if cursor.fetchone()[0] == 0:
        services_data = [
            ('ุงุณุชุดุงุฑุฉ ุชูููุฉ', 'ูุณุงุนุฏุฉ ูู ุญู ุงููุดุงูู ุงูุชูููุฉ ูุชูุฌูู ุงููุดุงุฑูุน.', '50 ุฏููุงุฑ/ุณุงุนุฉ'),
            ('ุชุตููู ุดุนุงุฑ', 'ุชุตููู ุดุนุงุฑุงุช ุงุญุชุฑุงููุฉ ููุดุฑูุงุช ูุงูุฃูุฑุงุฏ.', '150 ุฏููุงุฑ'),
            ('ุชุทููุฑ ุชุทุจููุงุช ุงูููุจ', 'ุจูุงุก ุชุทุจููุงุช ููุจ ูุฎุตุตุฉ ุจุงุญุชุฑุงููุฉ ุนุงููุฉ.', 'ุชุจุฏุฃ ูู 500 ุฏููุงุฑ'),
            ('ุฏุนู ููู 24/7', 'ุฏุนู ููู ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ ูุฌููุน ูุดุงููู.', '30 ุฏููุงุฑ/ุดูุฑ')
        ]
        cursor.executemany('INSERT INTO services (name, description, price) VALUES (?, ?, ?)', services_data)
        logger.info("ุชู ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ุฅูู ูุงุนุฏุฉ ุงูุจูุงูุงุช.")
    conn.commit()
    conn.close()
    logger.info("ุชู ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช SQLite.")

def get_services():
    """ุฌูุจ ุฌููุน ุงูุฎุฏูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช."""
    conn = sqlite3.connect(DATABASE_NAME)
    cursor = conn.cursor()
    cursor.execute('SELECT name, description, price FROM services')
    services = [{'name': row[0], 'description': row[1], 'price': row[2]} for row in cursor.fetchall()]
    conn.close()
    return services

# --- ูุธุงุฆู ุงูุจูุช (Telegram Bot Handlers) ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฑุญูุจูุฉ ูุฒุฑ ููุชุญ ุชุทุจูู ุงูููุจ."""
    # ุฅูุดุงุก ุฒุฑ ููุชุญ Web App
    keyboard = [[
        InlineKeyboardButton(
            "ุงูุชุญ ุฎุฏูุงุชูุง",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "ูุฑุญุจุงู ุจู ูู ุจูุช ุงูุฎุฏูุงุช ูุฏููุง! ๐\nุงุถุบุท ุนูู ุงูุฒุฑ ุฃุฏูุงู ูุงุณุชูุดุงู ุงูุฎุฏูุงุช ุงููุชุงุญุฉ:",
        reply_markup=reply_markup
    )
    logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุฅูู {update.effective_user.id}")

# --- ุฅุนุฏุงุฏ ุชุทุจูู Flask ูู API ---
app = Flask(__name__)

@app.route('/api/services', methods=['GET'])
def api_services():
    """ููุทุฉ ููุงูุฉ API ูุฌูุจ ุงูุฎุฏูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช."""
    services = get_services()
    logger.info(f"ุชู ุทูุจ ุฎุฏูุงุช API: ุชู ุฅุฑุฌุงุน {len(services)} ุฎุฏูุฉ.")
    return jsonify(services)

# --- ูุธููุฉ ุชุดุบูู ุงูุจูุช ---
def run_telegram_bot():
    """ุฏุงูุฉ ุชุดุบูู ุงูุจูุช."""
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    logger.info("ุจุฏุก ุชุดุบูู ุจูุช ุงูุชููุฌุฑุงู...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


# ************************************************************
# ุงูุชุบููุฑุงุช ุงูุฑุฆูุณูุฉ ููุง:
# 1. ุณูุชู ุงุณุชุฏุนุงุก `init_db()` ุนูุฏ ุจุฏุก ุชุดุบูู ุฃู ูู ุงูุนูููุชูู (web ุฃู worker).
# 2. ุนูุฏูุง ูุชู ุชุดุบูู ุงูููู ูู `worker` (ุฃู ุนู ุทุฑูู `python bot.py` ูู Procfile)ุ
#    ุณูุชู ุงุณุชุฏุนุงุก `run_telegram_bot()` ูุจุงุดุฑุฉ.
# 3. ุฅุฒุงูุฉ ุงููุชูุฉ `if __name__ == "__main__":` ุงูุชู ูุงูุช ูุฎุตุตุฉ ููุงุฎุชุจุงุฑ ุงููุญูู ููุท.
# ************************************************************

# ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุนูุฏ ุจุฏุก ุงูุชุดุบูู
# ูุฐุง ุงูุณุทุฑ ุณูููู ุฎุงุฑุฌ ุฃู ุฏุงูุฉุ ูุฐุง ุณูุชู ุชุดุบููู ุนูุฏ ุงุณุชูุฑุงุฏ ุงูููู ุฃู ุชุดุบููู.
init_db()

# ูุฐุง ุงูุฌุฒุก ุณูุชู ุชูููุฐู ููุท ุนูุฏูุง ูุชู ุชุดุบูู ุงูููู ุจูุงุณุทุฉ ุนูููุฉ ุงูู worker
# (ุฃู ุนูุฏูุง ูููู `python bot.py` ูู ุฃูุฑ ุงูุจุฏุก).
# ูุฌุจ ุฃู ูุชุฃูุฏ ูุฐุง ุงูุฌุฒุก ูู ุฃู ุงูุจูุช ูุจุฏุฃ ุจุงูุนูู.
try:
    # ูุชุดุบูู ุงูุจูุช ูู worker
    # ุณูุชู ุชุดุบูู ูุฐู ุงูุฏุงูุฉ ูุจุงุดุฑุฉ ุนูุฏูุง ูุชู ุงุณุชุฏุนุงุก "python bot.py"
    # ูู ุนูููุฉ ุงูู worker ุงูุชู ุชุญุฏุฏูุง ูู Procfile.
    if os.getenv("RENDER_SERVICE_TYPE") == "worker": # ูุญุงููุฉ ุงูุชุดุงู ุจูุฆุฉ Render worker
        run_telegram_bot()
    else:
        # ุฅุฐุง ูู ููู worker (ุนูู ุงูุฃุฑุฌุญ web service)ุ ููุง ุชูุนู ุดูุฆูุง ููุง.
        # Gunicorn ุณูุชููู ุชุดุบูู ุชุทุจูู Flask.
        logger.info("ูุจุฏู ุฃู ูุฐุง ููุณ worker. ูู ูุชู ุชุดุบูู ุจูุช ุงูุชููุฌุฑุงู.")
except Exception as e:
    logger.error(f"ุญุฏุซ ุฎุทุฃ ูู ุจุฏุก ุชุดุบูู ุงูุจูุช: {e}")

